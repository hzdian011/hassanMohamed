{% schema %}
{
  "name": "Products Grid",
  "blocks": [
    {
      "type": "product",
      "name": "Product Block",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select a product"
        },
        {
          "type": "range",
          "id": "pos_x",
          "label": "X Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_y",
          "label": "Y Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        }
      ]
    }
  ],
  "max_blocks": 6
}
{% endschema %}

<section class="products-section">
  <!-- Section Title -->
  <h2 class="section-title">Tisso vision in the wild</h2>

  <!-- Products Grid -->
  <div class="products-grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}

      <div class="product-card">
        <div class="image-wrapper">
          <!-- Product Image -->
          <img
            src="{{ product.featured_image | img_url: '500x' }}"
            alt="{{ product.title }}"
            width=""
            height=""
          >

          <!-- Plus Button (opens modal) -->
          <button
            class="plus-btn"
            data-handle="{{ product.handle }}"
            style="top:{{ block.settings.pos_y }}%; left:{{ block.settings.pos_x }}%;"
          >
            <!-- Plus Icon -->
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              class="plus-icon"
            >
              <g filter="url(#filter0_d_5_3060)">
                <circle cx="11.8571" cy="8.85714" r="7.85714" fill="#F8F8F8" fill-opacity="0.9"/>
                <path d="M12.1045 6.02985V12.0738" stroke="black" stroke-linecap="square" stroke-linejoin="round"/>
                <path d="M9.08252 9.05182H15.1265" stroke="black" stroke-linecap="square" stroke-linejoin="round"/>
              </g>
              <defs>
                <filter id="filter0_d_5_3060" x="0" y="0" width="23.7144" height="23.7143"
                        filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                  <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                  <feColorMatrix in="SourceAlpha" type="matrix"
                                 values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                                 result="hardAlpha"/>
                  <feOffset dy="3"/>
                  <feGaussianBlur stdDeviation="2"/>
                  <feComposite in2="hardAlpha" operator="out"/>
                  <feColorMatrix type="matrix"
                                 values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0"/>
                  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5_3060"/>
                  <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5_3060" result="shape"/>
                </filter>
              </defs>
            </svg>
          </button>
        </div>
      </div>
    {% endfor %}
  </div>

  <!-- Product Modal -->
  <div id="myModal" class="modal">
    <div class="modal-content">
      <!-- Close Button -->
      <span class="close">
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          class="closeFromSvg"
        >
          <path d="M5.0376 4.94354L13.5229 13.4288" stroke="black" stroke-width="1.5"
                stroke-linecap="square" stroke-linejoin="round"/>
          <path d="M5.0376 13.4285L13.5229 4.94325" stroke="black" stroke-width="1.5"
                stroke-linecap="square" stroke-linejoin="round"/>
        </svg>
      </span>

      <!-- Modal Top (Image + Basic Info) -->
      <div class="modal-top">
        <img id="modalImage" class="product-image" src="" alt="Product image" width="" height="">
        <div class="basic-details">
          <h2 id="modalTitle"></h2>
          <p id="modalPrice"></p>
          <p id="modalDescription"></p>
        </div>
      </div>

      <!-- Modal Details -->
      <div class="modal-details">
        <!-- Colors -->
        <div class="color-options">
          <label>Color</label>
          <div id="colorContainer"></div>
        </div>

        <!-- Sizes -->
        <div class="size-options">
          <label>Size</label>
          <div class="custom-dropdown">
            <button id="sizeDropdownBtn" class="dropdown-btn">
              <span class="label"> Choose your size</span>
              <span class="chevron">
                <svg
                  width="16"
                  height="10"
                  viewBox="0 0 16 10"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M2 2L8 8L14 2" stroke="black" stroke-width="1.5" stroke-linecap="square"/>
                </svg>
              </span>
            </button>
            <div id="sizeDropdownList" class="dropdown-list"></div>
          </div>
        </div>
      </div>

      <!-- Add to Cart -->
      <button id="addToCartBtn">
        <span class="addToCartBtn-text">ADD TO CART</span>
        <span class="addToCartBtn-icon">
          <svg
            width="36"
            height="12"
            viewBox="0 0 36 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M1.4093 5.25L0.659302 5.25L0.659302 6.75L1.4093 6.75L1.4093 5.25ZM35.6391 6.53033C35.932 6.23744 35.932 5.76257 35.6391 5.46967L30.8661 0.696701C30.5733 0.403808 30.0984 0.403808 29.8055 0.696701C29.5126 0.989594 29.5126 1.46447 29.8055 1.75736L34.0481 6L29.8055 10.2426C29.5126 10.5355 29.5126 11.0104 29.8055 11.3033C30.0984 11.5962 30.5732 11.5962 30.8661 11.3033L35.6391 6.53033ZM1.4093 6.75L35.1088 6.75L35.1088 5.25L1.4093 5.25L1.4093 6.75Z" fill="white"/>
          </svg>
        </span>
      </button>
    </div>
  </div>
</section>

<!-- ===================== STYLES ===================== -->
<style>
  /* ========== Modal Top ========== */
  .modal-top { display: flex; align-items: flex-start; gap: 15px; }
  .modal-top img.product-image { width: 136px; height: 161px; max-height: 300px; object-fit: cover; flex-shrink: 0; }
  .basic-details { display: flex; flex-direction: column; gap: 8px; }
  .basic-details h2 { font-size: 16px; margin: 0; font-weight: bold; }
  .basic-details p { margin: 0; font-size: 14px; color: #333; line-height: 1.2; }

  /* ========== Section Layout ========== */
  .products-section { display: flex; flex-direction: column; align-items: flex-start; gap: 30px; max-width: 1337px; margin: 0 auto; padding: 80px 0 50px; overflow-y: hidden; }
  .section-title { font-family: 'Lustria', serif; font-weight: 400; font-size: 36px; line-height: 120%; color: #000; margin: 0 auto; }
  .products-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px; margin: 0; }
  .product-card { text-align: center; width: 100%; height: 100%; }
  .image-wrapper { position: relative; display: inline-block; width: 100%; height: 100%; }
  .image-wrapper img { width: 100%; height: 100%; object-fit: cover; display: block; }

  /* ========== Modal Base ========== */
  .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); }
  .modal-content { background: #fff; margin: 8% auto; padding: 45px 20px 30px; width: 310px; position: relative; box-shadow: 0px 2px 6px rgba(0,0,0,0.25); display: flex; flex-direction: column; font-family: 'Jost', sans-serif; }
  .close { position: absolute; top: 10px; right: 15px; cursor: pointer; }

  /* ========== Modal Details ========== */
  .modal-details { display: flex; flex-direction: column; gap: 10px; margin: 20px 0; }
  #modalTitle{ font-family: 'Jost', sans-serif; font-weight: 300; font-size: 16px; line-height: 120%; color: #000; margin-top: 14px }
  #modalDescription{ font-family: 'Jost', sans-serif; font-weight: 300; font-size: 14px; line-height: 110%; letter-spacing: -0.01em; color: #000; }
  #modalPrice{ font-family: 'Lustria'; font-weight: 400; font-size: 20px; line-height: 120%; color: #000; margin:16px 0 3px; }

  /* ========== Colors ========== */
  .color-options { display: flex; flex-direction: column; gap: 8px; }
  .color-options label { font-family: 'Jost', sans-serif; font-weight: 400; font-size: 15px; color: #333; }
  #colorContainer { display: flex; }
  .color-btn { flex: 1; padding: 12px; border: 1px solid #000; background: #fff; cursor: pointer; text-align: start; transition: all 0.2s ease; font-family: 'Jost', sans-serif; font-size: 18px; text-transform: capitalize; }
  .color-btn.active { background: #000; color: #fff; border: 1px solid #000; transition: all 0.6s ease-in-out; }

  /* ========== Sizes ========== */
  .size-options {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .size-options label {
    font-family: 'Jost', sans-serif;
    font-size: 15px;
    color: #333;
  }

  .dropdown-btn {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border: 1px solid #000;
    cursor: pointer;
    width: 100%;
    background: #fff;
    font-size: 16px;
    Position:relative;
  }

  .dropdown-btn .label {
    padding: 12px; 
  }

  .dropdown-btn .chevron {
    display: flex;
    align-items: center;
    justify-content: center;
    border-left: 1px solid #000;
    align-self: stretch;   
    padding: 0 12px;       
  }

  .dropdown-btn svg {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
  }

  .dropdown-btn.active svg {
    transform: rotate(180deg);
  }

  {% comment %} .dropdown-list {
    display: none;
    flex-direction: column;
    border: 1px solid #000;
  } {% endcomment %}
.dropdown-list {
  top: 100%;      
  left: 0;
  right: 0;
  z-index: 9999;        /* أعلى من المودال */
  display: none;
  flex-direction: column;
  border: 1px solid #000;
  background: #fff;

  max-height: calc(3 * 40px); /* ارتفاع 3 عناصر فقط (48px لكل عنصر) */
  overflow-y: auto;

  scrollbar-width: none; 
  -ms-overflow-style: none;
}

.dropdown-list::-webkit-scrollbar {
  display: none;
}

  {% comment %} .dropdown-list button {
    padding: 10px;
    border: none;
    background: #fff;
    cursor: pointer;
    text-align: left;
  }

  .dropdown-list button:hover {
    background: #f0f0f0;
  } {% endcomment %}

  {% comment %} .dropdown-list button {
    padding: 12px;
    border: none;
    background: #fff;
    cursor: pointer;
    text-align: left;
    font-size: 16px;
    transition: background-color 0.4s ease, color 0.4s ease; /* تأثير ناعم */
  } {% endcomment %}

  
  .dropdown-list button {
    padding: 12px;
    border: none;
    background: #fff;
    cursor: pointer;
    text-align: center;
    font-size: 16px;
    height: 48px; /* لازم تثبت ارتفاع العنصر عشان الحسابات تزبط */
    transition: background-color 0.5s ease, color 0.5s ease;
  }

  .dropdown-list button:hover {
    background: #000;
    color: #fff;
  }

  /* ========== Add to Cart ========== */
  #addToCartBtn { background: #000; color: #fff; border: none; padding: 18px 15px; font-size: 14px; cursor: pointer; border-radius: 2px; margin-top: 40px; width: 100%; letter-spacing:1px; position: relative; display: flex; justify-content: center; align-items: center; }
  #addToCartBtn .addToCartBtn-text { position: absolute; left: 50%; transform: translateX(-50%); }
  #addToCartBtn .addToCartBtn-icon { position: absolute; right: 35px; top: 50%; transform: translateY(-50%); }

  /* ========== Plus Button ========== */
  .plus-btn { position: absolute; transform: translate(-50%, -50%); background: transparent; border: none; cursor: pointer; padding:0; }
  .plus-icon { width: 30px; height: 30px; color: white; }
</style>

<script>
  // ==============================
  // Global Variables
  // ==============================
  let currentProduct = null;

  // ==============================
  // Utility: Open & Render Cart Drawer
  // ==============================
  async function openCartDrawer() {
    try {
      const res = await fetch('/cart.js');
      const cart = await res.json();

      const cartItemsContainer = document.getElementById('cartItems');
      cartItemsContainer.innerHTML = '';

      cart.items.forEach(item => {
        const div = document.createElement('div');
        div.classList.add('cart-item');
        div.innerHTML = `
          <img src="${item.image}" alt="${item.product_title}" />
          <div class="cart-item-details">
            <h4>${item.product_title}</h4>
            <p>Qty: ${item.quantity}</p>
            <p>${(item.price / 100).toFixed(2)} €</p>
          </div>
        `;
        cartItemsContainer.appendChild(div);
      });

      document.getElementById('cartDrawer').classList.add('active');
    } catch (err) {
      console.error('Error opening cart drawer:', err);
    }
  }

  // Close cart drawer
  document.getElementById('closeCart').addEventListener('click', () => {
    document.getElementById('cartDrawer').classList.remove('active');
  });

  // ==============================
  // Open Modal on Product Click
  // ==============================
  document.querySelectorAll('.plus-btn').forEach((btn) => {
    btn.addEventListener('click', async () => {
      try {
        const handle = btn.dataset.handle;

        // Fetch product data
        const response = await fetch(`/products/${handle}.js`);
        const product = await response.json();
        currentProduct = product;

        // Fill modal with product data
        document.getElementById('modalTitle').textContent = product.title;
        document.getElementById('modalPrice').textContent = (product.price / 100).toFixed(2) + ' €';
        document.getElementById('modalDescription').innerHTML = product.description;
        document.getElementById('modalImage').src = product.images[0];

        // ------------------------------
        // Colors Section
        // ------------------------------
        const colorContainer = document.getElementById('colorContainer');
        colorContainer.innerHTML = '';

        const colorOption = product.options.find((opt) => opt.name.toLowerCase() === 'color');
        if (colorOption) {
          colorOption.values.forEach((color, i) => {
            const colorBtn = document.createElement('button');
            colorBtn.textContent = color;
            colorBtn.classList.add('color-btn');
            if (i === 0) colorBtn.classList.add('active'); // First color default

            colorBtn.addEventListener('click', () => {
              document.querySelectorAll('.color-btn').forEach((b) => b.classList.remove('active'));
              colorBtn.classList.add('active');
            });

            colorContainer.appendChild(colorBtn);
          });
        }

        // ------------------------------
        // Sizes Dropdown Section
        // ------------------------------
        const dropdownList = document.getElementById('sizeDropdownList');
        dropdownList.innerHTML = '';

        const sizeOption = product.options.find((opt) => opt.name.toLowerCase() === 'size');
        if (sizeOption) {
          sizeOption.values.forEach((size) => {
            const btn = document.createElement('button');
            btn.textContent = size;

            btn.addEventListener('click', () => {
              document.getElementById('sizeDropdownBtn').textContent = size;
              dropdownList.style.display = 'none';
            });

            dropdownList.appendChild(btn);
          });
        }

        // Show modal
        document.getElementById('myModal').style.display = 'block';
      } catch (err) {
        console.error('Error opening modal:', err);
      }
    });
  });

  // ==============================
  // Toggle Size Dropdown
  // ==============================
  document.getElementById('sizeDropdownBtn').addEventListener('click', () => {
    const list = document.getElementById('sizeDropdownList');
    const btn = document.getElementById('sizeDropdownBtn');

    if (list.style.display === 'flex') {
      list.style.display = 'none';
      btn.classList.remove('active');
    } else {
      list.style.display = 'flex';
      btn.classList.add('active');
    }
  });

  // ==============================
  // Add Product to Cart
  // ==============================
  document.getElementById('addToCartBtn').addEventListener('click', () => {
    if (!currentProduct) {
      alert('No product selected');
      return;
    }

    // Get selected color
    const selectedColorBtn = document.querySelector('.color-btn.active');
    const selectedColor = selectedColorBtn ? selectedColorBtn.textContent : null;

    // Get selected size
    const selectedSize =
      document.getElementById('sizeDropdownBtn').textContent !== 'Choose your size'
        ? document.getElementById('sizeDropdownBtn').textContent
        : null;

    // Find correct variant
    const selectedVariant = currentProduct.variants.find((v) => {
      return (
        (!selectedColor || v.options.includes(selectedColor)) &&
        (!selectedSize || v.options.includes(selectedSize))
      );
    });

    if (!selectedVariant) {
      alert('Please select options');
      return;
    }

    // Add product to cart
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json',
      },
      body: JSON.stringify({ id: selectedVariant.id, quantity: 1 }),
    })
      .then((res) => res.json())
      .then(() => {
        document.getElementById('myModal').style.display = 'none';
        openCartDrawer(); // افتح الكارت drawer بعد الإضافة
      })
      .catch(err => console.error('Error adding to cart:', err));
  });

  // ==============================
  // Close Modal Events
  // ==============================

  // Close modal with X button
  document.querySelector('.closeFromSvg').addEventListener('click', () => {
    document.getElementById('myModal').style.display = 'none';
  });

  // Close modal with ESC key
  window.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      document.getElementById('myModal').style.display = 'none';
    }
  });

  // Close modal when clicking outside
  window.addEventListener('click', (e) => {
    const modal = document.getElementById('myModal');
    if (e.target === modal) {
      modal.style.display = 'none';
    }
  });
</script>
