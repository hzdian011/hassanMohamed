{% schema %}
{
  "name": "Products Grid",
  "blocks": [
    {
      "type": "product",
      "name": "Product Block",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select a product"
        },
        {
          "type": "range",
          "id": "pos_x",
          "label": "X Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_y",
          "label": "Y Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        }
      ]
    }
  ],
  "max_blocks": 6
}
{% endschema %}

<section class="products-section">
  <!-- Title -->
  <h2 class="section-title">Tisso vision in the wild</h2>

  <div class="products-grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      <div class="product-card">
        <div class="image-wrapper">
          <img src="{{ product.featured_image | img_url: '500x' }}" alt="{{ product.title }}" width="" height="">

          <!-- زرار البلس -->
          <button
            class="plus-btn"
            data-handle="{{ product.handle }}"
            style="top:{{ block.settings.pos_y }}%; left:{{ block.settings.pos_x }}%;"
          >
            +
          </button>
        </div>
      </div>
    {% endfor %}
  </div>

  <!-- المودال -->
  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>

      <!-- image -->
      <img id="modalImage" class="product-image" src="" alt="Product image" width="" height="">

      <div class="modal-details">
        <!-- details -->
        <h2 id="modalTitle"></h2>
        <p id="modalPrice"></p>
        <p id="modalDescription"></p>

        <div class="color-options">
          <label>Color</label>
          <div id="colorContainer"></div>
        </div>

        <div class="size-options">
          <label for="sizeSelect">Size</label>
          <select id="sizeSelect">
            <option>Choose your size</option>
          </select>
        </div>
      </div>

      <button id="addToCartBtn">ADD TO CART →</button>
    </div>
  </div>
</section>

<style>
  .products-section {
    padding: 90px;
    padding-right: 30px;
    padding-left: 30px;
    max-width: 1200px;
    margin: auto;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    max-width: 1000px;
    margin: auto;
  }

  .product-card {
    text-align: center;
  }

  .image-wrapper {
    position: relative;
    display: inline-block;
  }

  .controls {
    margin-top: 10px;
  }

  .controls label {
    display: block;
    font-size: 12px;
    margin-bottom: 2px;
  }

  /* المودال */
  .modal {
    display: none;
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.5);
  }

  /* محتوى المودال */
  .modal-content {
    background: #fff;
    margin: 5% auto;
    padding: 20px;
    width: 311px;          /* زي التصميم */
    border-radius: 10px;
    position: relative;
    box-shadow: 0px 2px 4px rgba(0,0,0,0.2);

    display: flex;
    flex-direction: column;
    gap: 15px;
    font-family: Arial, sans-serif;
  }

  /* زر الإغلاق */
  .close {
    position: absolute;
    top: 10px; right: 15px;
    font-size: 20px;
    cursor: pointer;
  }

  /* صورة المنتج */
  .modal-content img.product-image {
    width: 100%;
    height: auto;
    border-radius: 6px;
  }

  /* تفاصيل المنتج */
  .modal-details {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .modal-details h2 {
    font-size: 16px;
    margin: 0;
    font-weight: normal;
  }

  .modal-details p {
    margin: 0;
    font-size: 14px;
    color: #333;
  }

  /* خيارات الألوان */
  .color-options {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .color-options label {
    font-size: 14px;
    font-weight: bold;
  }

  #colorContainer {
    display: flex;
    gap: 10px;
  }

  .color-btn {
    flex: 1;
    padding: 8px;
    border: 1px solid #000;
    background: #fff;
    cursor: pointer;
    font-weight: bold;
  }

  .color-btn.active {
    border-left: 4px solid blue;
  }

  /* خيارات المقاس */
  .size-options {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .size-options label {
    font-size: 14px;
    font-weight: bold;
  }

  .size-options select {
    padding: 8px;
    border: 1px solid #000;
    cursor: pointer;
  }

  /* زرار الكارت */
  #addToCartBtn {
    background: #000;
    color: #fff;
    border: none;
    padding: 14px;
    font-size: 14px;
    cursor: pointer;
    border-radius: 2px;
    margin-top: auto;
    width: 100%;
  }

  .image-wrapper img {
    width: 100%;
  }

  .plus-btn {
    position: absolute;
    transform: translate(-50%, -50%);
    background: white;
    border-radius: 50%;
    border:none;
    width: 25px;
    height: 25px;
    font-size: 15px;
    cursor: pointer;
  }
</style>

<script>
  // تحريك البلس بالـ range
  document.querySelectorAll('.range-x').forEach((input) => {
    input.addEventListener('input', () => {
      const handle = input.dataset.target;
      const btn = document.querySelector(`.plus-btn[data-handle="${handle}"]`);
      btn.style.left = input.value + '%';
    });
  });

  document.querySelectorAll('.range-y').forEach((input) => {
    input.addEventListener('input', () => {
      const handle = input.dataset.target;
      const btn = document.querySelector(`.plus-btn[data-handle="${handle}"]`);
      btn.style.top = input.value + '%';
    });
  });

  // فتح المودال عند الضغط على البلس
  document.querySelectorAll('.plus-btn').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const handle = btn.dataset.handle;
      const response = await fetch(`/products/${handle}.js`);
      const product = await response.json();

      document.getElementById('modalTitle').textContent = product.title;
      document.getElementById('modalPrice').textContent = product.price / 100 + ' €';
      document.getElementById('modalDescription').innerHTML  = product.description;
      document.getElementById('modalImage').src = product.images[0];
  


// 🟢 نجيب العنصر الحاوي للألوان

// =============== colors =================
const colorContainer = document.getElementById('colorContainer');
colorContainer.innerHTML = ''; // نفضي المحتوى القديم

// 🟢 جدول ألوان للتطابق
const colorMap = {
  'red': '#FF0000',
  'blue': '#0000FF',
  'green': '#00FF00',
  'black': '#000000',
  'white': '#FFFFFF',
  'yellow': '#FFFF00',
  'sky blue': '#87CEEB',
  'light pink': '#FFB6C1',
  // زود باقي الألوان اللي عندك في المنتجات
};

// 🟢 نجيب خيار اللون من Shopify
const colorOption = product.options.find(opt => opt.name.toLowerCase() === 'color');

if (colorOption) {
  colorOption.values.forEach((color, i) => {
    const colorBtn = document.createElement('button');
    colorBtn.textContent = color;
    colorBtn.classList.add('color-btn');
    if (i === 0) colorBtn.classList.add('active');

    // 🟢 نحول الاسم للـ lowercase ونشيل أي مسافات
    const normalizedColor = color.trim().toLowerCase();
    const cssColor = colorMap[normalizedColor] || '#000'; // fallback أسود لو مش موجود

    colorBtn.addEventListener('click', () => {
      document.querySelectorAll('.color-btn').forEach(b => {
        b.classList.remove('active');
        b.style.borderLeft = 'none';
      });

      colorBtn.classList.add('active');
      colorBtn.style.borderLeft = `4px solid ${cssColor}`;
    });

    colorContainer.appendChild(colorBtn);
  });
}




// ===================== size ============================
  const sizeSelect = document.getElementById('sizeSelect');

  // مسح أي مقاسات قديمة
  sizeSelect.innerHTML = '<option>Choose your size</option>';

  const sizeOption = product.options.find(opt => opt.name.toLowerCase() === 'size');
  if (sizeOption) {
    sizeOption.values.forEach(size => {
      let opt = document.createElement('option');
      opt.value = size;
      opt.textContent = size;
      sizeSelect.appendChild(opt);
    });
  }




      document.getElementById('myModal').style.display = 'block';
    });
  });

  function openCartDrawer() {
  fetch('/cart.js')
    .then(res => res.json())
    .then(cart => {
      const cartItemsContainer = document.getElementById('cartItems');
      cartItemsContainer.innerHTML = '';

      cart.items.forEach(item => {
        const div = document.createElement('div');
        div.classList.add('cart-item');
        div.innerHTML = `
          <img src="${item.image}" alt="${item.title}">
          <div class="cart-item-details">
            <h4>${item.product_title}</h4>
            <p>${item.variant_title || ''}</p>
            <p>Qty: ${item.quantity}</p>
            <p>${(item.line_price / 100).toFixed(2)} €</p>
          </div>
        `;
        cartItemsContainer.appendChild(div);
      });

      document.getElementById('cartDrawer').classList.add('active');
    });
}

// إغلاق الكارت
document.getElementById('closeCart').addEventListener('click', () => {
  document.getElementById('cartDrawer').classList.remove('active');
});


  // اغلاق المودال
  document.querySelector('.close').addEventListener('click', () => {
    document.getElementById('myModal').style.display = 'none';
  });

  // يقفل لو ضغطت بره المودال
  window.addEventListener('click', (e) => {
    const modal = document.getElementById('myModal');
    if (e.target === modal) {
      modal.style.display = 'none';
    }
  });

  document.querySelector('.close').addEventListener('click', () => {
    document.getElementById('myModal').style.display = 'none';
  });
</script>
