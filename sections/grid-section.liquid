{% schema %}
{
  "name": "Products Grid",
  "blocks": [
    {
      "type": "product",
      "name": "Product Block",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select a product"
        },
        {
          "type": "range",
          "id": "pos_x",
          "label": "X Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_y",
          "label": "Y Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        }
      ]
    }
  ],
  "max_blocks": 6
}
{% endschema %}

<section class="products-section">
  <!-- Title -->
  <h2 class="section-title">Tisso vision in the wild</h2>

  <div class="products-grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      <div class="product-card">
        <div class="image-wrapper">
          <img src="{{ product.featured_image | img_url: '500x' }}" alt="{{ product.title }}" width="" height="">

          <!-- plus button -->
          <button
            class="plus-btn"
            data-handle="{{ product.handle }}"
            style="top:{{ block.settings.pos_y }}%; left:{{ block.settings.pos_x }}%;"
          >
            +
          </button>
        </div>
      </div>
    {% endfor %}
  </div>

  <!-- Modal -->
  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>

      <div class="modal-top">
        <!-- image -->
        <img id="modalImage" class="product-image" src="" alt="Product image" width="" height="">

        <!-- basic details -->
        <div class="basic-details">
          <h2 id="modalTitle"></h2>
          <p id="modalPrice"></p>
          <p id="modalDescription"></p>
        </div>
      </div>

      <!-- extra details -->
      <div class="modal-details">
        <div class="color-options">
          <label>Color</label>
          <div id="colorContainer"></div>
        </div>

        <div class="size-options">
          <label>Size</label>
          <div class="custom-dropdown">
            <button id="sizeDropdownBtn" class="dropdown-btn">
              Choose your size
              <span class="chevron">&#9662;</span>
            </button>
            <div id="sizeDropdownList" class="dropdown-list"></div>
          </div>
        </div>
      </div>

      <button id="addToCartBtn">ADD TO CART →</button>
    </div>
  </div>
</section>


<style>
/*================= Modal Top =============== */
.modal-top {
  display: flex;
  align-items: flex-start;
  gap: 15px;
}

.modal-top img.product-image {
  width: 160px;
  height: auto;
  max-height: 220px;
  object-fit: cover;
  flex-shrink: 0;
}

.basic-details {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.basic-details h2 {
  font-size: 16px;
  margin: 0;
  font-weight: bold;
}

.basic-details p {
  margin: 0;
  font-size: 14px;
  color: #333;
}

/*================= Section =============== */
.products-section {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 30px;
  max-width: 1337px;
  margin: 0 auto;
  padding: 80px 0px 50px 0px;
  overflow-y: hidden;
}

.section-title {
  font-family: 'Lustria', serif;
  font-weight: 400;
  font-size: 36px;
  line-height: 120%;
  color: #000;
  margin: 0;
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 15px;
  margin: 0;
}

.product-card {
  text-align: center;
  width: 100%;
  height: 100%;
}

.image-wrapper {
  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;
}

.image-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/*================= Modal =============== */
.modal {
  display: none;
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.5);
}

.modal-content {
  background: #fff;
  margin: 8% auto;
  padding: 30px 20px;
  width: 340px;
  position: relative;
  box-shadow: 0px 2px 6px rgba(0,0,0,0.25);

  display: flex;
  flex-direction: column;
  gap: 18px;
  font-family: Arial, sans-serif;
}

.close {
  position: absolute;
  top: 10px; right: 15px;
  font-size: 20px;
  cursor: pointer;
}

.modal-details {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin: 20px 0;
}

#modalTitle{
  font-family: 'Jost';
  font-weight: 300;
  font-size: 16px;
  line-height: 120%;
  color: #000000;
}
#modalDescription{
  font-family: 'Jost';
  font-weight: 300;
  font-size: 14px;
  line-height: 110%;
  letter-spacing: -0.01em;
  color: #000000;
}
#modalPrice{
  font-family: 'Lustria';
  font-weight: 400;
  font-size: 16px;
  line-height: 120%;
  color: #000000;
}

/*================= Color Options =============== */
.color-options {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.color-options label {
  font-family: 'Jost';
  font-weight: 400;
  font-size: 14px;
  color: #333333;
}

#colorContainer {
  display: flex;
  gap: 10px;
}

.color-btn {
  flex: 1;
  padding: 8px;
  border: 1px solid #000;
  background: #fff;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
}

.color-btn.active {
  background: #000 !important;
  color: #fff !important;
  border: 1px solid #000;
}

/*================= Size Options =============== */
.size-options {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.size-options label {
  font-family: 'Jost';
  font-weight: 400;
  font-size: 14px;
  color: #333333;
}

.dropdown-btn {
  padding: 10px;
  border: 1px solid #000;
  cursor: pointer;
  width: 100%;
  text-align: left;
  background: #fff;
}

.dropdown-list {
  display: none;
  flex-direction: column;
  border: 1px solid #000;
  margin-top: 5px;
}

.dropdown-list button {
  padding: 10px;
  border: none;
  background: #fff;
  cursor: pointer;
  text-align: left;
}

.dropdown-list button:hover {
  background: #f0f0f0;
}

/*================= Add to Cart =============== */
#addToCartBtn {
  background: #000;
  color: #fff;
  border: none;
  padding: 14px;
  font-size: 14px;
  cursor: pointer;
  border-radius: 2px;
  margin-top: auto;
  width: 100%;
}

/*================= Plus Btn =============== */
.plus-btn {
  position: absolute;
  transform: translate(-50%, -50%);
  background: white;
  border-radius: 50%;
  border: none;
  width: 25px;
  height: 25px;
  font-size: 15px;
  cursor: pointer;
}
</style>

<script>
let currentProduct = null;

// Open modal when clicking plus
document.querySelectorAll('.plus-btn').forEach((btn) => {
  btn.addEventListener('click', async () => {
    const handle = btn.dataset.handle;
    const response = await fetch(`/products/${handle}.js`);
    const product = await response.json();

    currentProduct = product;

    document.getElementById('modalTitle').textContent = product.title;
    document.getElementById('modalPrice').textContent = product.price / 100 + ' €';
    document.getElementById('modalDescription').innerHTML = product.description;
    document.getElementById('modalImage').src = product.images[0];

    // colors
    const colorContainer = document.getElementById('colorContainer');
    colorContainer.innerHTML = '';

    const colorOption = product.options.find((opt) => opt.name.toLowerCase() === 'color');

    if (colorOption) {
      colorOption.values.forEach((color, i) => {
        const colorBtn = document.createElement('button');
        colorBtn.textContent = color;
        colorBtn.classList.add('color-btn');
        if (i === 0) colorBtn.classList.add('active');

        colorBtn.addEventListener('click', () => {
          document.querySelectorAll('.color-btn').forEach((b) => b.classList.remove('active'));
          colorBtn.classList.add('active');
        });

        colorContainer.appendChild(colorBtn);
      });
    }

    // sizes dropdown
    const dropdownList = document.getElementById('sizeDropdownList');
    dropdownList.innerHTML = '';

    const sizeOption = product.options.find((opt) => opt.name.toLowerCase() === 'size');
    if (sizeOption) {
      sizeOption.values.forEach((size) => {
        let btn = document.createElement('button');
        btn.textContent = size;
        btn.addEventListener('click', () => {
          document.getElementById('sizeDropdownBtn').textContent = size;
          dropdownList.style.display = 'none';
        });
        dropdownList.appendChild(btn);
      });
    }

    document.getElementById('myModal').style.display = 'block';
  });
});

// Toggle size dropdown
document.getElementById('sizeDropdownBtn').addEventListener('click', () => {
  const list = document.getElementById('sizeDropdownList');
  list.style.display = list.style.display === 'flex' ? 'none' : 'flex';
});

// Add to cart
document.getElementById('addToCartBtn').addEventListener('click', () => {
  if (!currentProduct) {
    alert('No product selected');
    return;
  }

  const selectedColorBtn = document.querySelector('.color-btn.active');
  const selectedColor = selectedColorBtn ? selectedColorBtn.textContent : null;

  const selectedSize = document.getElementById('sizeDropdownBtn').textContent !== 'Choose your size'
    ? document.getElementById('sizeDropdownBtn').textContent
    : null;

  const selectedVariant = currentProduct.variants.find((v) => {
    return (
      (!selectedColor || v.options.includes(selectedColor)) &&
      (!selectedSize || v.options.includes(selectedSize))
    );
  });

  if (!selectedVariant) {
    alert('Please select options');
    return;
  }

  fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },
    body: JSON.stringify({ id: selectedVariant.id, quantity: 1 }),
  })
    .then((res) => res.json())
    .then(() => {
      document.getElementById('myModal').style.display = 'none';
    });
});

// Close modal
document.querySelector('.close').addEventListener('click', () => {
  document.getElementById('myModal').style.display = 'none';
});

window.addEventListener('click', (e) => {
  const modal = document.getElementById('myModal');
  if (e.target === modal) {
    modal.style.display = 'none';
  }
});
</script>
