{% schema %}
{
  "name": "Products Grid",
  "blocks": [
    {
      "type": "product",
      "name": "Product Block",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select a product"
        },
        {
          "type": "range",
          "id": "pos_x",
          "label": "X Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_y",
          "label": "Y Position (%)",
          "min": 0,
          "max": 100,
          "default": 50
        }
      ]
    }
  ],
  "max_blocks": 6
}
{% endschema %}

<!-- Products Grid -->
<div class="products-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
    <div class="product-card">
      <div class="image-wrapper">
        <img src="{{ product.featured_image | img_url: '500x' }}" alt="{{ product.title }}">

        <!-- plus button -->
        <button
          class="plus-btn"
          data-handle="{{ product.handle }}"
          style="top:{{ block.settings.pos_y }}%; left:{{ block.settings.pos_x }}%;"
        >
          +
        </button>
      </div>
    </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Modal -->
<div id="myModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>

    <!-- image -->
    <img id="modalImage" class="product-image" src="" alt="Product image">

    <!-- details -->
    <div class="modal-details">
      <h2 id="modalTitle"></h2>
      <p id="modalPrice"></p>
      <p id="modalDescription"></p>

      <div class="color-options">
        <label>Color</label>
        <div id="colorContainer"></div>
      </div>

      <div class="size-options">
        <label for="sizeSelect">Size</label>
        <select id="sizeSelect">
          <option>Choose your size</option>
        </select>
      </div>

      <button id="addToCartBtn">ADD TO CART →</button>
    </div>
  </div>
</div>

<style>
  .products-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    max-width: 1000px;
    margin: auto;
  }

  .product-card {
    text-align: center;
  }

  .image-wrapper {
    position: relative;
    display: inline-block;
  }

  .image-wrapper img {
    width: 100%;
    border-radius: 8px;
  }

  .plus-btn {
    position: absolute;
    transform: translate(-50%, -50%);
    background: white;
    border-radius: 50%;
    border: none;
    width: 25px;
    height: 25px;
    font-size: 15px;
    cursor: pointer;
  }

  /* Modal */
  .modal {
    display: none;
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 999;
  }

  .modal-content {
    background: #fff;
    margin: 5% auto;
    padding: 20px;
    max-width: 800px;
    border-radius: 10px;
    position: relative;

    display: flex;
    gap: 20px;
    align-items: flex-start;
  }

  .modal-content img.product-image {
    max-width: 40%;
    height: auto;
    border-radius: 8px;
  }

  .modal-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .close {
    position: absolute;
    top: 10px; right: 15px;
    font-size: 22px;
    cursor: pointer;
  }

  .color-options {
    display: flex;
    gap: 10px;
    margin: 15px 0;
  }

  .color-btn {
    padding: 8px 20px;
    border: 1px solid #ccc;
    background: #fff;
    cursor: pointer;
    font-weight: bold;
  }

  .color-btn.active {
    border-left: 4px solid blue;
  }

  @media (max-width: 600px) {
    .modal-content {
      flex-direction: column;
      max-width: 95%;
    }

    .modal-content img.product-image {
      max-width: 100%;
    }
  }
</style>

<script>
  const modal = document.getElementById('myModal');
  const closeBtn = document.querySelector('.close');

  // open modal on plus click
  document.querySelectorAll('.plus-btn').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const handle = btn.dataset.handle;
      const response = await fetch(`/products/${handle}.js`);
      const product = await response.json();

      document.getElementById('modalTitle').textContent = product.title;
      document.getElementById('modalPrice').textContent = (product.price / 100) + ' €';
      document.getElementById('modalDescription').textContent = product.description;
      document.getElementById('modalImage').src = product.images[0];

      // build colors
      const colorContainer = document.getElementById('colorContainer');
      colorContainer.innerHTML = '';
      const colorOption = product.options.find((opt) => opt.name.toLowerCase() === 'color');
      if (colorOption) {
        colorOption.values.forEach((color, i) => {
          const colorBtn = document.createElement('button');
          colorBtn.textContent = color;
          colorBtn.classList.add('color-btn');
          if (i === 0) colorBtn.classList.add('active');
          colorBtn.addEventListener('click', () => {
            document.querySelectorAll('.color-btn').forEach((b) => b.classList.remove('active'));
            colorBtn.classList.add('active');
            colorBtn.style.borderLeft = `4px solid ${color.toLowerCase()}`;
          });
          colorContainer.appendChild(colorBtn);
        });
      }

      // build sizes
      const sizeSelect = document.getElementById('sizeSelect');
      sizeSelect.innerHTML = '<option>Choose your size</option>';
      product.variants.forEach((variant) => {
        let opt = document.createElement('option');
        opt.value = variant.id;
        opt.textContent = variant.option1;
        sizeSelect.appendChild(opt);
      });

      modal.style.display = 'block';
    });
  });

  // close on X
  closeBtn.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  // close on outside click
  window.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.style.display = 'none';
    }
  });
</script>
